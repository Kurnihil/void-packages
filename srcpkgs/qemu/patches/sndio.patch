--- audio/Makefile.objs
+++ audio/Makefile.objs
@@ -28,3 +28,8 @@ common-obj-$(CONFIG_AUDIO_SDL) += sdl.mo
 sdl.mo-objs = sdlaudio.o
 sdl.mo-cflags := $(SDL_CFLAGS)
 sdl.mo-libs := $(SDL_LIBS)
+
+# sndio module
+common-obj-$(CONFIG_AUDIO_SNDIO) += sndio.mo
+sndio.mo-objs = sndioaudio.o
+sndio.mo-libs := $(SNDIO_LIBS)
--- configure
+++ configure
@@ -893,8 +893,8 @@ Haiku)
  LIBS="-lposix_error_mapper -lnetwork $LIBS"
 ;;
 Linux)
-  audio_drv_list="try-pa oss"
-  audio_possible_drivers="oss alsa sdl pa"
+  audio_drv_list="try-sndio"
+  audio_possible_drivers="sndio alsa sdl pa"
  linux="yes"
  linux_user="yes"
  kvm="yes"
@@ -3451,6 +3451,24 @@ fi
 ##########################################
 # Sound support libraries probe
 
+audio_drv_probe()
+{
+    drv=$1
+    hdr=$2
+    lib=$3
+    exp=$4
+    cfl=$5
+        cat > $TMPC << EOF
+#include <$hdr>
+int main(void) { $exp }
+EOF
+    if compile_prog "$cfl" "$lib" ; then
+        :
+    else
+        return 1
+    fi
+}
+
 audio_drv_list=$(echo "$audio_drv_list" | sed -e 's/,/ /g')
 for drv in $audio_drv_list; do
     case $drv in
@@ -3500,6 +3518,23 @@ for drv in $audio_drv_list; do
     fi
     ;;
 
+    sndio | try-sndio)
+    if audio_drv_probe $drv sndio.h "-lsndio" \
+        "sio_open(0, SIO_PLAY, 0); return 0;"; then
+        sndio_libs="-lsndio"
+        if test "$drv" = "try-sndio"; then
+            audio_drv_list=$(echo "$audio_drv_list" | sed -e 's/try-sndio/sndio/')
+        fi
+    else
+        if test "$drv" = "try-sndio"; then
+            audio_drv_list=$(echo "$audio_drv_list" | sed -e 's/try-sndio//')
+        else
+            error_exit "$drv check failed" \
+                "Make sure to have the $drv libs and headers installed."
+        fi
+    fi
+    ;;
+
     coreaudio)
       coreaudio_libs="-framework CoreAudio"
     ;;
@@ -6765,7 +6796,7 @@ echo "CONFIG_AUDIO_DRIVERS=$audio_drv_list" >> $config
 for drv in $audio_drv_list; do
     def=CONFIG_AUDIO_$(echo $drv | LC_ALL=C tr '[a-z]' '[A-Z]')
     case "$drv" in
-	alsa | oss | pa | sdl)
+	alsa | oss | pa | sdl | sndio)
 	    echo "$def=m" >> $config_host_mak ;;
 	*)
 	    echo "$def=y" >> $config_host_mak ;;
@@ -6776,6 +6807,7 @@ echo "PULSE_LIBS=$pulse_libs" >> $config_host_mak
 echo "COREAUDIO_LIBS=$coreaudio_libs" >> $config_host_mak
 echo "DSOUND_LIBS=$dsound_libs" >> $config_host_mak
 echo "OSS_LIBS=$oss_libs" >> $config_host_mak
+echo "SNDIO_LIBS=$sndio_libs" >> $config_host_mak
 if test "$audio_win_int" = "yes" ; then
   echo "CONFIG_AUDIO_WIN_INT=y" >> $config_host_mak
 fi
--- audio/audio_template.h
+++ audio/audio_template.h
@@ -309,6 +309,8 @@ AudiodevPerDirectionOptions *glue(audio_get_pdo_, TYPE
         return dev->u.none.TYPE;
     case AUDIODEV_DRIVER_ALSA:
         return qapi_AudiodevAlsaPerDirectionOptions_base(dev->u.alsa.TYPE);
+    case AUDIODEV_DRIVER_SNDIO:
+        return dev->u.sndio.TYPE;
     case AUDIODEV_DRIVER_COREAUDIO:
         return qapi_AudiodevCoreaudioPerDirectionOptions_base(
             dev->u.coreaudio.TYPE);
--- qapi/audio.json
+++ qapi/audio.json
@@ -102,6 +102,28 @@
     '*threshold': 'uint32' } }
 
 ##
+# @AudiodevSndioOptions:
+#
+# Options of the sndio audio backend.
+#
+# @in: options of the capture stream
+#
+# @out: options of the playback stream
+#
+# @dev: the name of the sndio device to use (default 'default')
+#
+# @latency: play buffer size (in microseconds)
+#
+# Since: 4.0
+##
+{ 'struct': 'AudiodevSndioOptions',
+  'data': {
+    '*in':        'AudiodevPerDirectionOptions',
+    '*out':       'AudiodevPerDirectionOptions',
+    '*dev':       'str',
+    '*latency':   'uint32'} }
+
+##
 # @AudiodevCoreaudioPerDirectionOptions:
 #
 # Options of the Core Audio backend that are used for both playback and
@@ -286,7 +308,7 @@
 # Since: 4.0
 ##
 { 'enum': 'AudiodevDriver',
-  'data': [ 'none', 'alsa', 'coreaudio', 'dsound', 'oss', 'pa', 'sdl',
+  'data': [ 'none', 'alsa', 'sndio', 'coreaudio', 'dsound', 'oss', 'pa', 'sdl',
             'spice', 'wav' ] }
 
 ##
@@ -311,6 +333,7 @@
   'data': {
     'none':      'AudiodevGenericOptions',
     'alsa':      'AudiodevAlsaOptions',
+    'sndio':     'AudiodevSndioOptions',
     'coreaudio': 'AudiodevCoreaudioOptions',
     'dsound':    'AudiodevDsoundOptions',
     'oss':       'AudiodevOssOptions',
--- audio/audio.c
+++ audio/audio.c
@@ -1954,6 +1954,7 @@ void audio_create_pdos(Audiodev *dev)
 
         CASE(NONE, none, );
         CASE(ALSA, alsa, Alsa);
+        CASE(SNDIO, sndio, );
         CASE(COREAUDIO, coreaudio, Coreaudio);
         CASE(DSOUND, dsound, );
         CASE(OSS, oss, Oss);
